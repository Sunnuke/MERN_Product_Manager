[{"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\index.js":"1","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\reportWebVitals.js":"2","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\App.js":"3","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\views\\Main.jsx":"4","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\components\\ProductForm.jsx":"5","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\views\\Details.jsx":"6","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\components\\ProductList.jsx":"7","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\views\\Update.jsx":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":438,"mtime":1611101552069,"results":"12","hashOfConfig":"10"},{"size":1084,"mtime":1611101311079,"results":"13","hashOfConfig":"10"},{"size":1229,"mtime":1611106601451,"results":"14","hashOfConfig":"10"},{"size":989,"mtime":1611106550605,"results":"15","hashOfConfig":"10"},{"size":1064,"mtime":1611104292846,"results":"16","hashOfConfig":"10"},{"size":1912,"mtime":1611104184475,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"13yezbk",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"20"},"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\index.js",[],["38","39"],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\reportWebVitals.js",[],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\App.js",[],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\views\\Main.jsx",["40","41"],"import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport ProductForm from \"../components/ProductForm\";\r\nimport ProductList from \"../components/ProductList\";\r\n\r\nexport default () => {\r\n    const [message, setMessage] = useState(\"Connecting...\");\r\n    const [products, setProducts] = useState([]);\r\n    const [loaded, setLoaded] = useState(false);\r\n    useEffect(()=>{\r\n        axios.get('http://localhost:8000/api/products')\r\n            .then(res=>{\r\n                setProducts(res.data);\r\n                setLoaded(true);\r\n            });\r\n    },[])\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api\")\r\n            .then(res => setMessage(res.data.message))\r\n    }, []);\r\n\r\n    const removingDOM = (productId) => {\r\n        setProducts(products.filter(product => product._id != productId));\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <h1>Connection status: {message}</h1>\r\n            <ProductForm />\r\n            <hr/>\r\n            {loaded && <ProductList products={products} removingDOM={removingDOM}/>}\r\n        </>\r\n    )\r\n}","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\components\\ProductForm.jsx",["42"],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\views\\Details.jsx",["43","44"],"C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\components\\ProductList.jsx",["45"],"import { Link } from \"@reach/router\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nexport default (props) => {\r\n    const { removingDOM } = props;\r\n    const deleting = (id) => {\r\n        axios.delete(\"http://localhost:8000/api/products/\" + id)\r\n            .then(res => {\r\n                removingDOM(id);\r\n            })\r\n    }\r\n    return(\r\n        <div>\r\n            {\r\n                props.products.map((product, i) => {\r\n                    return(\r\n                        <div key={i}>\r\n                            <p>\r\n                                <Link to={\"/products/\" + product._id}>\r\n                                    {product.title}\r\n                                </Link>\r\n                                 | \r\n                                <button onClick={ e => {deleting(product._id)} }>\r\n                                    Delete\r\n                                </button>\r\n                            </p>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\jcr3x\\Desktop\\CODES\\CODINGDOJO\\MERN\\Full_Stack_MERN\\Product_Manager\\MERN_Product_Manager\\client\\src\\views\\Update.jsx",["46","47"],"import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default (props) => {\r\n    const { id } = props;\r\n    const [ title, setTitle ] = useState(\"\");\r\n    const [ price, setPrice ] = useState(\"\");\r\n    const [ description, setDescription ] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        axios.get(\"http://localhost:8000/api/products/\" + id)\r\n            .then(res => {\r\n                setTitle(res.data.title);\r\n                setPrice(res.data.price);\r\n                setDescription(res.data.description);\r\n        })\r\n            .catch(err => console.log(err));\r\n    }, [])\r\n\r\n    const updating = (e) => {\r\n        e.preventDefault();\r\n        axios.put(\"http://localhost:8000/api/products/\" + id, {\r\n            title,\r\n            price,\r\n            description\r\n        })\r\n            .then(res => console.log(res));\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h1>Edit Product Details</h1>\r\n            <form onSubmit={updating}>\r\n                <p>\r\n                    <label>Title</label><br/>\r\n                    <input type=\"text\"\r\n                    name=\"title\"\r\n                    value={title}\r\n                    onChange={ e => { setTitle(e.target.value) } }/>\r\n                </p>\r\n\r\n                <p>\r\n                    <label>Price</label><br/>\r\n                    <input type=\"number\"\r\n                    name=\"price\"\r\n                    value={price}\r\n                    onChange={ e => { setPrice(e.target.value) } }/>\r\n                </p>\r\n\r\n                <p>\r\n                    <label>Description</label><br/>\r\n                    <input type=\"text\"\r\n                    name=\"description\"\r\n                    value={description}\r\n                    onChange={ e => { setDescription(e.target.value) } }/>\r\n                </p>\r\n\r\n                <input type=\"submit\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}",{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":6,"column":1,"nodeType":"54","endLine":34,"endColumn":2},{"ruleId":"55","severity":1,"message":"56","line":23,"column":60,"nodeType":"57","messageId":"58","endLine":23,"endColumn":62},{"ruleId":"52","severity":1,"message":"53","line":5,"column":1,"nodeType":"54","endLine":40,"endColumn":2},{"ruleId":"52","severity":1,"message":"53","line":5,"column":1,"nodeType":"54","endLine":31,"endColumn":2},{"ruleId":"59","severity":1,"message":"60","line":10,"column":8,"nodeType":"61","endLine":10,"endColumn":10,"suggestions":"62"},{"ruleId":"52","severity":1,"message":"53","line":5,"column":1,"nodeType":"54","endLine":34,"endColumn":2},{"ruleId":"52","severity":1,"message":"53","line":4,"column":1,"nodeType":"54","endLine":62,"endColumn":2},{"ruleId":"59","severity":1,"message":"63","line":18,"column":8,"nodeType":"61","endLine":18,"endColumn":10,"suggestions":"64"},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.id'. Either include it or remove the dependency array.","ArrayExpression",["67"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["68"],"no-global-assign","no-unsafe-negation",{"desc":"69","fix":"70"},{"desc":"71","fix":"72"},"Update the dependencies array to be: [props.id]",{"range":"73","text":"74"},"Update the dependencies array to be: [id]",{"range":"75","text":"76"},[355,357],"[props.id]",[614,616],"[id]"]